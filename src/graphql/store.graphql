query GetStore($pageSize: Int, $skip: Int) {
    store {
        id
        image
        name
        description
        balance {
            balance
            totalSales
        }
    }

    storeFee

    storeProducts(take: $pageSize, skip: $skip) {
        items {
            id
            name
            categoryId
            productType
            price
            discount
            coverImage
            categories {
                slug
                name
            }
        }

        pageInfo {
            hasNextPage
            hasPreviousPage
        }

        totalCount
    }
}

mutation CreateStore($name: String!, $description: String!, $image: Upload!) {
    createStore(input: {name: $name, description: $description, image: $image}) {
        store {
            id
            image
            name
            description
            balance {
                balance
                totalSales
            }
        }

        errors {
            ... on InvalidInputError {
                message
            }
        }
    }
}

mutation UpdateStoreDetails($name: String!, $description: String!, $image: Upload!) {
    updateStore(input: {name: $name, description: $description, image: $image}) {
        updated
        errors {
            ... on InvalidInputError {
                message
            }
        }
    }
}

mutation CreateNewProduct($product: ProductInput!) {
    createNewProduct(input: {product: $product}) {
        created

        errors {
            ... on InvalidInputError {
                message
            }
        }
    }
}

query GetNewProductInitialData {
    storeFee
    store {
        id
    }
    categories {
        id
        name
    }
}

query GetSubcategories($categoryId: String!) {
    subcategories(categoryId: $categoryId) {
        id
        name
        productTypes
        filters {
            name
            type
            unit
            productTypes
        }
    }
}

mutation AddNewProduct($product: ProductInput!) {
    createNewProduct(input: {product: $product}) {
        created
        errors {
            ... on InvalidInputError {
                message
            }
        }
    }
}

query GetStoreProduct($id: String!) {
    storeFee

    store {
        id
    }

    categories {
        id
        name
    }

    storeProduct(id: $id) {
        id
        briefDescription
        categoryId
        coverImage
        description
        discount
        images
        name
        price
        productType
        shipmentPrice
        subcategoryId
        details
        published
    }
}

mutation EditProduct($id: String!, $product: ProductInput!) {
    editProduct(input: {id: $id, product: $product}) {
        updated
        errors {
            ... on InvalidInputError {
                message
            }
        }
    }
}

mutation PublishProduct($id: String!) {
    publishProduct(input: {id: $id}) {
        published
        errors {
            ... on InvalidInputError {
                message
            }
        }
    }
}

mutation UnPublishProduct($id: String!) {
    unPublishProduct(input: {id: $id}) {
        unpublished
        errors {
            ... on InvalidInputError {
                message
            }
        }
    }
}

mutation DeleteProduct($id: String!) {
    deleteProduct(input: {id: $id}) {
        deleted
        errors {
            ... on InvalidInputError {
                message
            }
        }
    }
}

query GetStoreProductPreview($id: String!) {
    storeProduct(id: $id) {
        name
        price
        discount
        shipmentPrice
        briefDescription
        description
        details
        coverImage
        images
    }

    store {
        name
    }

    productUnits(id: $id) {
        key
        value
    }
}